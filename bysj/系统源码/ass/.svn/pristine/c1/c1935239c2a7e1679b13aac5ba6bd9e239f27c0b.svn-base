package com.edu.zzti.ass.testlibrary.controller;


import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSONArray;
import com.edu.zzti.ass.core.model.PageInfo;
import com.edu.zzti.ass.testlibrary.model.TJudge;
import com.edu.zzti.ass.testlibrary.model.TUnit;
import com.edu.zzti.ass.testlibrary.service.ILibraryService;
import com.edu.zzti.ass.testlibrary.service.ITestPaperService;

@Controller
@RequestMapping("/frontJudge")
public class FrontTJudgeController {
	@Autowired
	private ITestPaperService testPaperService;
	@Autowired
	private ILibraryService libraryService;

	/**
	 * 访问addTjudge页面 添加属性
	 * 
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/addTjudge", method = { RequestMethod.GET })
	public ModelAndView addTjudge(Model model) {
		model.addAttribute("Tjudge", new TJudge());
		ModelAndView mav = new ModelAndView();
		List<TUnit> units = this.testPaperService.find().get("unit");
		mav.addObject("units", units);
		/*mav.addObject("sector", this.testPaperService.find().get("sector"));*/
		mav.setViewName("addTjudge");
		return mav;
	}
	/**
	 * 判断题添加页面的提交
	 * 
	 * @param judge
	 * @return
	 */
	@RequestMapping(value = "addTjudge", method = { RequestMethod.POST })
	public ModelAndView addTJudge(TJudge judge) {
		ModelAndView mav = new ModelAndView();
		System.out.println(judge.gettSector());
		testPaperService.addTjudge(judge);
		mav.setViewName("manage/success");
		return mav;
	}
	
	@RequestMapping(value = "checkChapter/{unitId}", method = { RequestMethod.GET })
	public void checkChapter(@PathVariable Integer unitId,
			HttpServletResponse response) {
		JSONArray jsonArray = new JSONArray();
		jsonArray.add(this.libraryService.checkChapter(unitId));
		System.out.println(jsonArray);
		try {
			response.getWriter().print(jsonArray);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	@RequestMapping(value = "checkSector/{chapterId}", method = { RequestMethod.GET })
	public void checkSector( Model model ,@PathVariable Integer chapterId,
			HttpServletResponse response) {
		model.addAttribute("Tjudge", new TJudge());
		JSONArray jsonArray = new JSONArray();
		jsonArray.add(this.libraryService.checkSector(chapterId));
		System.out.println(jsonArray);
		try {
			response.getWriter().print(jsonArray);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
